class MemoriaDeSeguranca

types
	public Candidatos = set of Candidato;	
values
-- TODO D
instance variables
	private votantes :  set of Eleitor := {};
	private votos : map Candidato to int := { |-> };

operations
	
	public MemoriaDeSeguranca : Candidatos ==> MemoriaDeSeguranca
	MemoriaDeSeguranca(candidatos) == ( 
		votos  :=  {cand |-> 0 | cand in set candidatos};
	return self);
		
	public addVotante : Eleitor *  Candidato ==> ()
	addVotante(eleitor, candidato) == (
		votos(candidato) := votos(candidato) +	1;
		votantes := votantes union {eleitor};
	)
	pre jaVotou(eleitor)=false;
	
	public jaVotou : Eleitor ==> bool
	jaVotou(eleitor) == (
		if(eleitor in set votantes) then
		(return true;)
		else 
		(return false;)

	);
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end MemoriaDeSeguranca