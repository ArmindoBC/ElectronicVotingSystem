class EleicaoTest
types
 		public CadernoEleitoral =  set of Eleitor;
		public Candidatos =  set of Candidato;
instance variables
		cadernoEleitoral :  [CadernoEleitoral]:= {};
		candidatos : [Candidatos]:= {};
		memoriaSeguranca : [MemoriaDeSeguranca]:= nil;
		eleicao : [Eleicao] := nil; 
		 cand : Candidato := new Candidato("Paulo Portas", <CDS>);
operations
		
	private simplesEleicao: () ==> ()
	simplesEleicao() == (
		
	
		candidatos  := candidatos union {cand};
		candidatos  := candidatos union {new Candidato("Passos Coelho", <PSD>)};
		candidatos  := candidatos union {new Candidato("Antonio Costa", <PS>)};
		candidatos  := candidatos union {new Candidato("Catarina Martins", <BE>)};
		candidatos  := candidatos union {new Candidato("Jeronimo de Sousa", <PCP>)};
					
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Armindo", 21,"St M Maior",12122)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Mike", 22,"Paranhos",11122)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Joao", 58,"Darque",13322)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Diogo", 23,"Areosa",14422)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Miguel", 98,"Carreco",127654)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Ana", 19,"Caminha",12345)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Luisa", 23,"Viana",11255)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Jessica", 34,"Lisboa",11335)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Raquel", 65,"Barcelos",87654)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Luis", 56,"Porto",23232)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Ruben", 31,"Lousada",323232)};
		cadernoEleitoral := cadernoEleitoral  union {new Eleitor("Duarte", 44,"Penafiel",165433)};
		
		
		memoriaSeguranca := new MemoriaDeSeguranca(candidatos);
		
		eleicao :=  new Eleicao(candidatos, cadernoEleitoral, memoriaSeguranca);
		
		for all eleitor in set cadernoEleitoral do
		(
			eleicao.Autenticacao(eleitor);
			eleicao.ValidacaoDoEleitor();
			eleicao.Selecao(cand);
			eleicao.confirmarVotacao();
			eleicao.completarVotacao();
			
		);
		
		eleicao.registoDeAtividades.imprimeRegisto();
			
	);
	
	
	
	
	
	public static main : () ==> ()
		main() == (
		new EleicaoTest().simplesEleicao();
		
		);
		
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end EleicaoTest